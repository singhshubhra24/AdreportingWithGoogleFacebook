"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Campaigns_1 = __importDefault(require("./entities/Campaigns"));
const CampaignBudgets_1 = __importDefault(require("./entities/CampaignBudgets"));
const CampaignCriterions_1 = __importDefault(require("./entities/CampaignCriterions"));
const CampaignNegatives_1 = __importDefault(require("./entities/CampaignNegatives"));
const CampaignAdSchedules_1 = __importDefault(require("./entities/CampaignAdSchedules"));
const CampaignSharedSets_1 = __importDefault(require("./entities/CampaignSharedSets"));
const AdGroups_1 = __importDefault(require("./entities/AdGroups"));
const AdGroupAds_1 = __importDefault(require("./entities/AdGroupAds"));
const AdGroupCriterions_1 = __importDefault(require("./entities/AdGroupCriterions"));
const Keywords_1 = __importDefault(require("./entities/Keywords"));
const SharedSets_1 = __importDefault(require("./entities/SharedSets"));
const SharedSetCriterions_1 = __importDefault(require("./entities/SharedSetCriterions"));
const constants_1 = require("./constants");
function Customer(http_controller) {
    return {
        campaigns: new Campaigns_1.default(http_controller),
        campaignAdSchedules: new CampaignAdSchedules_1.default(http_controller),
        campaignBudgets: new CampaignBudgets_1.default(http_controller),
        campaignCriterions: new CampaignCriterions_1.default(http_controller),
        campaignNegatives: new CampaignNegatives_1.default(http_controller),
        campaignSharedSets: new CampaignSharedSets_1.default(http_controller, constants_1.ENDPOINTS.campaign_shared_sets, constants_1.RESOURCE_NAMES.campaign_shared_set),
        adgroups: new AdGroups_1.default(http_controller),
        ads: new AdGroupAds_1.default(http_controller),
        adgroupCriterions: new AdGroupCriterions_1.default(http_controller),
        keywords: new Keywords_1.default(http_controller),
        sharedSets: new SharedSets_1.default(http_controller),
        sharedSetCriterions: new SharedSetCriterions_1.default(http_controller),
        retrieve: () => http_controller.retrieve(constants_1.ENDPOINTS.customers),
        query: (query) => http_controller.query(query),
        report: (config) => http_controller.report(config),
    };
}
exports.default = Customer;
