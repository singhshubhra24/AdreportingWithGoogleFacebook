import { NewEntityConfig, ListConfig } from './Entity';
import { UpdateConfig, ReportConfig } from './Global';
declare namespace Http {
    /**
     *  Http Controller Interface
     * @interface
     */
    interface HttpController {
        retrieve(entity: string, entity_id?: string | number): Promise<object>;
        create(config: NewEntityConfig | NewEntityConfig[], entity: string): Promise<object>;
        list(config: ListConfig | undefined, resource: string): Promise<object>;
        update(config: UpdateConfig | UpdateConfig[], entity: string): Promise<object>;
        delete(entity: string, entity_id: string | number): Promise<object>;
        query(entity: string): Promise<object>;
        report(config: ReportConfig): Promise<object>;
    }
    /**
     *  Access Token Interface
     * @interface
     */
    interface AccessToken {
        access_token: string;
        expires_in: number;
        id_token: string | number;
        token_type: string;
    }
    /**
     *  Error Interface
     * @interface
     */
    interface Error {
        code: string | number;
        details: object;
        message: string;
        status: string;
    }
    /**
     * Request Options Interface
     * @interface
     */
    interface RequestOptions {
        method: string;
        url: string;
        headers: {
            authorization: string;
            'developer-token': string;
            'login-customer-id': string;
        };
        qs?: {
            query?: string;
            page_size?: string | number;
            page_token?: string;
        };
        body?: string;
    }
    /**
     * Result Interface
     * @interface
     */
    interface Result {
        results: object;
        total_results_count: string | number;
        field_mask: string;
    }
}
export = Http;
