import { ClientConstructor, ReportConfig } from './types/Global';
import { HttpController } from './types/Http';
import { ListConfig, EntityUpdateConfig, NewEntityConfig } from './types/Entity';
export default class Http implements HttpController {
    private client;
    private throttler;
    private pre_query_hook;
    private post_query_hook;
    constructor({ async_account_getter, client_id, developer_token, client_secret, throttler, pre_query_hook, post_query_hook, }: ClientConstructor);
    create(config: NewEntityConfig | NewEntityConfig[], entity: string): Promise<object>;
    retrieve(entity: string, entity_id?: string): Promise<any>;
    list(config: ListConfig, resource: string): Promise<any>;
    report(config: ReportConfig): Promise<any>;
    update(config: EntityUpdateConfig | EntityUpdateConfig[], entity: string): Promise<object>;
    delete(entity: string, entity_id: string): Promise<any>;
    query(query: string, page_size?: number): Promise<any>;
    private queryApi;
    private queryIterator;
    private queryWithRetry;
    private doHttpRequest;
    private getRequestOptions;
    private formatRequestConfig;
    private getRequestUrl;
    private buildResourceName;
}
